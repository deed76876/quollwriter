<update-script from="1" to="2">
  <item canFail="true">
    <log>Create table "scene".</log>
    <sql>
CREATE TABLE scene
(
    dbkey BIGINT NOT NULL,
    position INTEGER,
    chapterdbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)        
    </sql>
  </item>

  <item canFail="true">
    <log>Create character table.</log>
    <sql>
CREATE TABLE character
(
    dbkey BIGINT NOT NULL,
    projectdbkey BIGINT NOT NULL,
    aliases CLOB,
    PRIMARY KEY (dbkey)
)        
    </sql>
  </item>

  <item canFail="true">
    <log>Create location table.</log>
    <sql>
CREATE TABLE location
(
    dbkey BIGINT NOT NULL,
    projectdbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)        
    </sql>
  </item>
	
  <item canFail="true">
    <log>Create table "researchitem".</log>
    <sql>
CREATE TABLE researchitem
(
    dbkey BIGINT NOT NULL,
    url CLOB,
    projectdbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)        
    </sql>
  </item>

  <item canFail="true">
    <log>Create table "qobject".</log>
    <sql>
CREATE TABLE qobject
(
    dbkey BIGINT NOT NULL,
    type VARCHAR(255),
    projectdbkey BIGINT NOT NULL,
    PRIMARY KEY (dbkey)
)        
    </sql>
  </item>

  <item canFail="true">
    <log>Add "goals" column to chapter table.</log>
    <sql>
ALTER TABLE chapter ADD goals CLOB        
    </sql>
  </item>

  <item canFail="true">
    <log>Add a "aliases" column to character table.</log>
    <sql>
ALTER TABLE character ADD aliases CLOB        
    </sql>
  </item>

  <item canFail="true">
    <log>Add "scenedbkey" column to outlineitem table.</log>
    <sql>
ALTER TABLE outlineitem ADD scenedbkey BIGINT
    </sql>
  </item>

  <item canFail="true">
    <log>Add "objectdbkey" column to note table.</log>
    <sql>
ALTER TABLE note ADD objectdbkey BIGINT
    </sql>
  </item>

  <item>
    <log>Set "objectdbkey" column to have the chapterdbkey value.</log>
    <sql>
UPDATE note
SET    objectdbkey = chapterdbkey
WHERE  chapterdbkey IS NOT NULL
    </sql>
  </item>

  <item canFail="true">
    <log>Change "objectdbkey" column to be not null.</log>
    <sql>
ALTER TABLE note ALTER COLUMN objectdbkey SET NOT NULL
    </sql>
  </item>

  <item canFail="true">
    <log>Create the wordcount table.</log>
    <sql>
CREATE TABLE wordcount
(
    dbkey BIGINT NOT NULL,
    projectdbkey BIGINT NOT NULL,
    chapterdbkey BIGINT,
    start TIMESTAMP NOT NULL,
    end TIMESTAMP NOT NULL,
    count INT NOT NULL,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create the actionlog table.</log>
    <sql>
CREATE TABLE actionlog
(
    onobjectdbkey BIGINT,
    when TIMESTAMP NOT NULL,
    message CLOB,
    changes BLOB,
    digest CLOB
)
    </sql>
  </item>

  <item>
    <log>Create foreign key constraint for actionlog/namedobject.</log>
    <sql>
ALTER TABLE actionlog ADD CONSTRAINT actionlog_namedobject_fk FOREIGN KEY(onobjectdbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item canFail="true">
    <log>Create foreign key constraint for wordcount/project.</log>
    <sql>
ALTER TABLE wordcount ADD CONSTRAINT wordcount_project_fk FOREIGN KEY(projectdbkey) REFERENCES project(dbkey)
    </sql>
  </item>

  <item canFail="true">
    <log>Create foreign key constraint for wordcount/chapter.</log>
    <sql>
ALTER TABLE wordcount ADD CONSTRAINT wordcount_chapter_fk FOREIGN KEY(chapterdbkey) REFERENCES chapter(dbkey)
    </sql>
  </item>

  <item canFail="true">
    <log>Create foreign key constraint for note(objectdbkey)/namedobject.</log>
    <sql>
ALTER TABLE note ADD CONSTRAINT note_objdbkey_namedobject_fk FOREIGN KEY(objectdbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item canFail="true">
    <log>Create foreign key constraint for outlineitem/scene.</log>
    <sql>
ALTER TABLE outlineitem ADD CONSTRAINT outlineitem_scene_fk FOREIGN KEY(scenedbkey) REFERENCES scene(dbkey)
    </sql>
  </item>

  <item canFail="true">
    <log>Create foreign key constraint for scene/chapter.</log>
    <sql>
ALTER TABLE scene ADD CONSTRAINT scene_chapter_fk FOREIGN KEY(chapterdbkey) REFERENCES chapter(dbkey)
    </sql>
  </item>

  <item canFail="true">
    <log>Create foreign key constraint for link/namedobject.</log>
    <sql>
ALTER TABLE link ADD CONSTRAINT link_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item canFail="true">
    <log>Delete entries for obj1dbkey in link that are not referenced in namedobject.</log>
    <sql>
DELETE FROM link
WHERE  obj1dbkey NOT IN (SELECT dbkey FROM namedobject)
    </sql>
  </item>

  <item canFail="true">
    <log>Delete entries for obj2dbkey in link that are not referenced in namedobject.</log>
    <sql>
DELETE FROM link
WHERE  obj2dbkey NOT IN (SELECT dbkey FROM namedobject)
    </sql>
  </item>

  <item canFail="true">
    <log>Create foreign key constraint for link(object1dbkey)/namedobject.</log>
    <sql>
ALTER TABLE link ADD CONSTRAINT link_obj1dbkey_namedobject_fk FOREIGN KEY(object1dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

  <item canFail="true">
    <log>Create foreign key constraint for link(object2dbkey)/namedobject.</log>
    <sql>
ALTER TABLE link ADD CONSTRAINT link_obj2dbkey_namedobject_fk FOREIGN KEY(object2dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>

</update-script>

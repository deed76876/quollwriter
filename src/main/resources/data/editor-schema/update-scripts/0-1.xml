<update-script from="0" to="1">
  <item>
    <log>Create the key_sequence sequence.</log>
    <sql>
CREATE SEQUENCE key_sequence START WITH 1 INCREMENT BY 1    
    </sql>
  </item>
  <item>
    <log>Create dataobject table.</log>
    <sql>
CREATE TABLE dataobject
(
  dbkey BIGINT DEFAULT (NEXT VALUE FOR key_sequence) NOT NULL,
  objecttype VARCHAR(255),
  datecreated TIMESTAMP,
  properties CLOB,
  version UUID DEFAULT RANDOM_UUID(),
  id UUID DEFAULT RANDOM_UUID(),
  latest BOOLEAN DEFAULT TRUE,  
  PRIMARY KEY (dbkey)
)
    </sql>
  </item>
  
  <item>
    <log>Create namedobject table.</log>
    <sql>
CREATE TABLE namedobject
(
    dbkey BIGINT NOT NULL,
    name CLOB,
    description CLOB,
    userobjecttypedbkey BIGINT,
    markup CLOB,
    files CLOB,
    lastmodified TIMESTAMP,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create the actionlog table.</log>
    <sql>
CREATE TABLE actionlog
(
    onobjectdbkey BIGINT,
    when TIMESTAMP NOT NULL,
    message CLOB,
    changes BLOB,
    digest CLOB
)
    </sql>
  </item>
  
  <item>
    <log>Create info table.</log>
    <sql>
CREATE TABLE info
(
    schema_version SMALLINT DEFAULT 1,
    email VARCHAR(500),
    messagingusername VARCHAR(500),
    servicename VARCHAR(500),
    name VARCHAR(500),
    lastlogin TIMESTAMP,
    avatarimage BLOB,
    myprivatekey BLOB,
    mypublickey BLOB
)        
    </sql>
  </item>

  <item>
    <log>Create the editor table.</log>
    <sql>
CREATE TABLE editor
(
    dbkey BIGINT NOT NULL,
    status VARCHAR(100) DEFAULT 'pending' NOT NULL,
    mynameforeditor VARCHAR(500),
    email VARCHAR(500),
    messagingusername VARCHAR(500),
    servicename VARCHAR(500),
    avatarimage BLOB,
    myavatarimageforeditor BLOB,
    theirpublickey BLOB,
    invitedbyme BOOLEAN DEFAULT false,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>

  <item>
    <log>Create the message table.  This extends the dataobject table only.</log>
    <sql>
CREATE TABLE message
(
    dbkey BIGINT NOT NULL,
    when TIMESTAMP NOT NULL,
    type VARCHAR(50) NOT NULL,
    sentbyme BOOLEAN DEFAULT false NOT NULL,
    editordbkey BIGINT NOT NULL,
    forprojectid VARCHAR(100),
    messageid VARCHAR(250),
    // The actual message sent/received.
    origmessage CLOB,
    // A short/decoded version of the message that will be loaded.
    message CLOB,
    dealtwith BOOLEAN DEFAULT false,
    visible BOOLEAN DEFAULT true,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>
  
  <item>
    <log>Create the projecteditor table, extends dataobject only.</log>
    <sql>
CREATE TABLE projecteditor
(
    dbkey BIGINT NOT NULL,
    editordbkey BIGINT NOT NULL,
    forprojectid VARCHAR(100) NOT NULL,
    forprojectname CLOB NOT NULL,
    status VARCHAR(100) DEFAULT 'invited' NOT NULL,
    statusmessage VARCHAR(500) NOT NULL,
    current BOOLEAN DEFAULT true,
    editorfrom TIMESTAMP DEFAULT now(),
    editorto TIMESTAMP,
    PRIMARY KEY (dbkey)
)
    </sql>
  </item>
      
  <item>
    <log>Create foreign key constraint for projecteditor/dataobject.</log>
    <sql>
ALTER TABLE projecteditor ADD CONSTRAINT projecteditor_dataobject_fk FOREIGN KEY(dbkey) REFERENCES dataobject(dbkey)
    </sql>
  </item>
        
  <item>
    <log>Create foreign key constraint for projecteditor/editor.</log>
    <sql>
ALTER TABLE projecteditor ADD CONSTRAINT projecteditor_editor_fk FOREIGN KEY(editordbkey) REFERENCES editor(dbkey)
    </sql>
  </item>

  <item>
    <log>Create an index on projecteditor[forprojectid].</log>
    <sql>
CREATE INDEX projecteditor_forprojectid ON projecteditor(forprojectid)
    </sql>
  </item>

  <item>
    <log>Add a unique constraint on the email/messagingusername in teditor.</log>
    <sql>
ALTER TABLE editor ADD CONSTRAINT editor_email_messagingusername_uk UNIQUE(email, messagingusername)
    </sql>
  </item>

  <item>
    <log>Add a unique constraint on the editordbkey/forprojectid in projecteditor.</log>
    <sql>
ALTER TABLE projecteditor ADD CONSTRAINT projecteditor_editordbkeyforprojectid_uk UNIQUE(editordbkey, forprojectid)
    </sql>
  </item>
  
  <item>
    <log>Create an index on message[when].</log>
    <sql>
CREATE INDEX message_when ON message (when)
    </sql>
  </item>

  <item>
    <log>Create an index on message[type].</log>
    <sql>
CREATE INDEX message_type ON message (type)
    </sql>
  </item>

  <item>
    <log>Create an index on message[forprojectid].</log>
    <sql>
CREATE INDEX message_forprojectid ON message (forprojectid)
    </sql>
  </item>
  
  <item>
    <log>Create an index on message[editordbkey, id].</log>
    <sql>
CREATE INDEX message_editordbkey_id ON message (editordbkey, messageid)
    </sql>
  </item>
        
  <item>
    <log>Create foreign key constraint for editor/namedobject.</log>
    <sql>
ALTER TABLE editor ADD CONSTRAINT editor_namedobject_fk FOREIGN KEY(dbkey) REFERENCES namedobject(dbkey)
    </sql>
  </item>
  
  <item>
    <log>Create foreign key constraint for message/dataobject.</log>
    <sql>
ALTER TABLE message ADD CONSTRAINT message_dataobject_fk FOREIGN KEY(dbkey) REFERENCES dataobject(dbkey)
    </sql>
  </item>
  
  <item>
    <log>Create foreign key constraint for editor/chatmessage.</log>
    <sql>
ALTER TABLE message ADD CONSTRAINT editor_fk FOREIGN KEY(editordbkey) REFERENCES editor(dbkey)
    </sql>
  </item>
  
  <item>
    <log>Create foreign key constraint for namedobject/dataobject.</log>
    <sql>
ALTER TABLE namedobject ADD CONSTRAINT namedobject_dataobject_fk FOREIGN KEY(dbkey) REFERENCES dataobject(dbkey)
    </sql>
  </item>

  <item>
    <log>Initing info record.</log>
    <sql>
INSERT INTO info (schema_version) VALUES (-1)
    </sql>
  </item>
  
</update-script>

